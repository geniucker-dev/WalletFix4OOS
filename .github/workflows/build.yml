name: Build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
      - "update.json"
      - "LICENSE"
      - .github/**
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
        default: "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Checkout to target branch (tag)
        run: |
          git checkout ${{ github.event.inputs.ref }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''

      - name: Get apks from apk branch
        run: |
          git fetch origin apk:apk
          git checkout apk -- product
          mv product module/template/

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew zipRelease
          ./gradlew zipDebug


      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          releaseName=`ls module/release/Wallet-Fix-*-release.zip | awk -F '(/|.zip)' '{print $3}'` && echo "releaseName=$releaseName" >> $GITHUB_OUTPUT
          debugName=`ls module/release/Wallet-Fix-*-debug.zip | awk -F '(/|.zip)' '{print $3}'` && echo "debugName=$debugName" >> $GITHUB_OUTPUT
          unzip module/release/Wallet-Fix-*-release.zip -d module-release
          unzip module/release/Wallet-Fix-*-debug.zip -d module-debug

      - name: Upload release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.releaseName }}
          path: "./module-release/*"

      - name: Upload debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.debugName }}
          path: "./module-debug/*"
